{"version":3,"sources":["file:///D:/program/cocos/project/FlappyBird/assets/scripts/Bird.ts"],"names":["_decorator","Animation","Component","Input","input","RigidBody2D","Vec2","Contact2DType","Collider2D","AudioClip","Tags","GameManager","AudioMgr","ccclass","property","Bird","rgb2D","_canControl","onLoad","on","EventType","TOUCH_START","onTouchStart","collider","getComponent","BEGIN_CONTACT","onBeginContact","END_CONTACT","onEndContact","onDestroy","off","linearVelocity","node","angle","inst","playOneShot","clickAudio","update","deltaTime","rotateSpeed","enableControl","enabled","disableControl","disableControlNotRGD","selfCollider","otherCollider","contact","tag","LAND","PIPE","transitionToGameOverState","PIPE_MIDDLE","addScore"],"mappings":"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","sourcesContent":["import {\r\n  _decorator,\r\n  Animation,Component,\r\n  Node,\r\n  Input,\r\n  input,\r\n  RigidBody2D,\r\n  Vec2,\r\n  Contact2DType,\r\n  Collider2D,\r\n  IPhysics2DContact,\r\n  AudioClip,\r\n} from \"cc\";\r\nimport { Tags } from \"./Tags\";\r\nimport { GameManager } from \"./GameManager\";\r\nimport { AudioMgr } from \"./AudioMgr\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"Bird\")\r\nexport class Bird extends Component {\r\n  private rgb2D: RigidBody2D = null;\r\n  @property\r\n  rotateSpeed: number = 30;\r\n  private _canControl: boolean = false;\r\n  @property(AudioClip)\r\n  clickAudio: AudioClip = null;\r\n  onLoad() {\r\n    input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n    let collider = this.getComponent(Collider2D);\r\n    if (collider) {\r\n      collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n      collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n    }\r\n    this.rgb2D = this.getComponent(RigidBody2D);\r\n  }\r\n  onDestroy() {\r\n    input.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n    let collider = this.getComponent(Collider2D);\r\n    if (collider) {\r\n      collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\r\n      collider.off(Contact2DType.END_CONTACT, this.onEndContact, this);\r\n    }\r\n  }\r\n  onTouchStart() {\r\n    if (this._canControl == false) return;\r\n    this.rgb2D.linearVelocity = new Vec2(0, 10);\r\n    this.node.angle = 30;\r\n    AudioMgr.inst.playOneShot(this.clickAudio);\r\n  }\r\n\r\n  protected update(deltaTime: number): void {\r\n    if (this._canControl == false) return;\r\n    this.node.angle -= this.rotateSpeed * deltaTime;\r\n    if (this.node.angle < -40) {\r\n      this.node.angle = -40;\r\n    } \r\n  }\r\n\r\n  public enableControl() {\r\n    this.getComponent(Animation).enabled = true;\r\n    this.rgb2D.enabled = true;\r\n    this._canControl = true;\r\n  }\r\n  public disableControl() {\r\n    this.getComponent(Animation).enabled = false;\r\n    this.rgb2D.enabled = false;\r\n    this._canControl = false;\r\n  }\r\n  public disableControlNotRGD() {\r\n    this.getComponent(Animation).enabled = false;\r\n    this._canControl = false;\r\n  }\r\n  // 只禁用控制 不禁用刚体\r\n  onBeginContact(\r\n    selfCollider: Collider2D,\r\n    otherCollider: Collider2D,\r\n    contact: IPhysics2DContact | null\r\n  ) {\r\n    // 只在两个碰撞体开始接触时被调用一次\r\n    if (otherCollider.tag === Tags.LAND || otherCollider.tag === Tags.PIPE) {\r\n      GameManager.inst().transitionToGameOverState();\r\n    }\r\n  }\r\n  onEndContact(\r\n    selfCollider: Collider2D,\r\n    otherCollider: Collider2D,\r\n    contact: IPhysics2DContact | null\r\n  ) {\r\n    // 只在两个碰撞体结束接触时被调用一次\r\n    if (otherCollider.tag === Tags.PIPE_MIDDLE) {\r\n      GameManager.inst().addScore();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n"]}