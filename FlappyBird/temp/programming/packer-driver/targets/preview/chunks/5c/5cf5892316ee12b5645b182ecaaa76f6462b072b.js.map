{"version":3,"sources":["file:///D:/program/cocos/project/FlappyBird/assets/scripts/MoveBg.ts"],"names":["_decorator","Component","Node","GameManager","ccclass","property","MoveBg","moveSpeed","_canMoving","start","inst","update","deltaTime","moveDistance","p1","target1ToMove","getPosition","setPosition","x","y","p2","target2ToMove","enableMoving","disableMoving"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,W,iBAAAA,W;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;wBAGjBM,M,WADZF,OAAO,CAAC,QAAD,C,UAELC,QAAQ,CAACH,IAAD,C,UAGRG,QAAQ,CAACH,IAAD,C,2BALX,MACaI,MADb,SAC4BL,SAD5B,CACsC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAO5BM,SAP4B,GAOR,GAPQ;AAAA,eAQ5BC,UAR4B,GAQN,KARM;AAAA;;AASpCC,QAAAA,KAAK,GAAG;AACN,eAAKF,SAAL,GAAiB;AAAA;AAAA,0CAAYG,IAAZ,GAAmBH,SAApC;AACD;;AAEDI,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACxB,cAAI,KAAKJ,UAAL,IAAmB,KAAvB,EAA8B;AAC9B,cAAMK,YAAY,GAAG,KAAKN,SAAL,GAAiBK,SAAtC;AACA,cAAIE,EAAE,GAAG,KAAKC,aAAL,CAAmBC,WAAnB,EAAT;AACA,eAAKD,aAAL,CAAmBE,WAAnB,CAA+BH,EAAE,CAACI,CAAH,GAAOL,YAAtC,EAAoDC,EAAE,CAACK,CAAvD;AACA,cAAIC,EAAE,GAAG,KAAKC,aAAL,CAAmBL,WAAnB,EAAT;AACA,eAAKK,aAAL,CAAmBJ,WAAnB,CAA+BG,EAAE,CAACF,CAAH,GAAOL,YAAtC,EAAoDO,EAAE,CAACD,CAAvD;;AACA,cAAIL,EAAE,CAACI,CAAH,GAAO,CAAC,GAAZ,EAAiB;AACfE,YAAAA,EAAE,GAAG,KAAKC,aAAL,CAAmBL,WAAnB,EAAL;AACA,iBAAKD,aAAL,CAAmBE,WAAnB,CAA+BG,EAAE,CAACF,CAAH,GAAO,GAAtC,EAA2CE,EAAE,CAACD,CAA9C;AACD;;AACD,cAAIC,EAAE,CAACF,CAAH,GAAO,CAAC,GAAZ,EAAiB;AACfJ,YAAAA,EAAE,GAAG,KAAKC,aAAL,CAAmBC,WAAnB,EAAL;AACA,iBAAKK,aAAL,CAAmBJ,WAAnB,CAA+BH,EAAE,CAACI,CAAH,GAAO,GAAtC,EAA2CJ,EAAE,CAACK,CAA9C;AACD;AACF;;AAEMG,QAAAA,YAAY,GAAG;AACpB,eAAKd,UAAL,GAAkB,IAAlB;AACD;;AACMe,QAAAA,aAAa,GAAG;AACrB,eAAKf,UAAL,GAAkB,KAAlB;AACD;;AAnCmC,O;;;;;iBAEd,I;;;;;;;iBAGA,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"MoveBg\")\r\nexport class MoveBg extends Component {\r\n  @property(Node)\r\n  target1ToMove: Node = null;\r\n\r\n  @property(Node)\r\n  target2ToMove: Node = null;\r\n\r\n  private moveSpeed: number = 100;\r\n  private _canMoving: boolean = false;\r\n  start() {\r\n    this.moveSpeed = GameManager.inst().moveSpeed;\r\n  }\r\n\r\n  update(deltaTime: number) {\r\n    if (this._canMoving == false) return;\r\n    const moveDistance = this.moveSpeed * deltaTime;\r\n    let p1 = this.target1ToMove.getPosition();\r\n    this.target1ToMove.setPosition(p1.x - moveDistance, p1.y);\r\n    let p2 = this.target2ToMove.getPosition();\r\n    this.target2ToMove.setPosition(p2.x - moveDistance, p2.y);\r\n    if (p1.x < -728) {\r\n      p2 = this.target2ToMove.getPosition();\r\n      this.target1ToMove.setPosition(p2.x + 728, p2.y);\r\n    }\r\n    if (p2.x < -728) {\r\n      p1 = this.target1ToMove.getPosition();\r\n      this.target2ToMove.setPosition(p1.x + 728, p1.y);\r\n    }\r\n  }\r\n\r\n  public enableMoving() {\r\n    this._canMoving = true;\r\n  }\r\n  public disableMoving() {\r\n    this._canMoving = false;\r\n  }\r\n}\r\n\r\n\r\n"]}